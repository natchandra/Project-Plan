{"version":3,"sources":["components/layout/SigninLinks.js","store/action/authActions.js","components/layout/SignoutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/action/createProject.js","App.js","serviceWorker.js","reducer/authReducer.js","reducer/projectReducer.js","reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initial","SignoutLinks","state","console","log","firebase","link","uid","layout_SigninLinks","layout_SignoutLinks","Link","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","projects","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","project","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","toString","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","fireStore","authorID","add","objectSpread","authorId","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83b3a3ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { signOut } from '../../store/action/authActions'\r\n\r\nconst SigninLinks = (props) =>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li> <NavLink to=\"/createproject\">New Project</NavLink> </li>\r\n            {/*<li> <NavLink to=\"/\">Log Out</NavLink> </li>*/}\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li> <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initial}</NavLink> </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapsDispatchtoProps = (dispatch) =>{\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapsDispatchtoProps)(SigninLinks)","export const signIn = (credentials) =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) =>{\r\n            dispatch({type:'LOGIN_ERROR',err})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return (dispatch, getState,{getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut()\r\n        .then( () => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then( (resp) =>{\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initial: newUser.firstName[0] + newUser.lastName[0]\r\n            })              \r\n        }).then(() =>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) =>{\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignoutLinks = () =>{\r\n    return(\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n                <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignoutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SigninLinks from './SigninLinks'\r\nimport SignoutLinks from './SignoutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n    const { auth, profile } = props\r\n    //console.log(auth)\r\n    const link = auth.uid ? <SigninLinks profile={profile}/> : <SignoutLinks/>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">Project Plan</Link>\r\n                {/*<SigninLinks />\r\n                <SignoutLinks />*/}\r\n                {link}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStatetoProps = (state) =>{\r\n    console.log(state)\r\n    return {\r\n        auth : state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStatetoProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notification =(props)=>{\r\n    const {notifications} = props\r\n    console.log(notifications);\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notification</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item =>{\r\n                            return(\r\n                                <li key={item.id}>\r\n                                    <span className='pink-text'>{item.user}</span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className='grey-text note-date'>\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Notification","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({projects}) =>{\r\n    return(\r\n        <div className=\"project-list section\">\r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{projects.title}</span>\r\n                    <p>Posted by {projects.authorFirstName} {projects.authorLastName}</p>\r\n                    <p className=\"grey-text\">{moment(projects.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList =({projects})=>{\r\n    return(\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project =>{\r\n                return(\r\n                    <Link to={'/projects/' + project.id} key={project.id}>\r\n                        <ProjectSummary projects={project}  />\r\n                    </Link>\r\n                )\r\n            })}            \r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\nexport default ProjectList","import React, { Component } from 'react';\r\nimport Notification from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        \r\n        const {projects, auth, notifications} = this.props\r\n        console.log(this.props)\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps = (state) =>{\r\n    console.log(state);\r\n    return{\r\n        //projects: state.project.project\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n        connect(mapStatetoProps),\r\n        firestoreConnect([\r\n            { collection:'projects', orderBy:['createdAt','desc'] },\r\n            { collection:'notifications', limit: 3, orderBy: ['time','desc']}\r\n        ])\r\n    )(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectDetails = (props) =>{\r\n    //const id = props.match.params.id\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    if(project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\"> {project.title} </span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else{\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading Project...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\nconst mapStatetoProps = (state, ownProps) =>{\r\n    console.log(ownProps);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project : project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(connect(mapStatetoProps),\r\n    firestoreConnect([{ collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { signIn } from '../../store/action/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component{\r\n    state={\r\n        email:\"\",\r\n        password:\"\"\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n    handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.signIn(this.state);\r\n    }\r\n    render(){\r\n        const { authError, auth} = this.props\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Login</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p> {authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps = (state) =>{\r\n    return{\r\n        authError : state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n    return {\r\n        signIn: (creds) =>dispatch(signIn(creds))\r\n    }\r\n}\r\nexport default connect(mapStatetoProps,mapDispatchtoProps) (SignIn)","import React, {Component} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/action/authActions'\r\n\r\nclass SignUp extends Component{\r\n    state={\r\n        email:\"\",\r\n        password:\"\",\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n    handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.signUp(this.state)\r\n    }\r\n    render(){\r\n        const { auth, authError } = this.props\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(SignUp)","import React, {Component} from 'react'\r\nimport {createProject} from '../../store/action/createProject'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component{\r\n    state={\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n    handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render(){\r\n        const { auth } = this.props\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\"> ProjectContent</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStatetoProps,mapDispatchtoProps) (CreateProject)","export const createProject = (project) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        //make async to db \r\n        const fireStore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorID = getState().firebase.auth.uid;\r\n        fireStore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorID,\r\n            createdAt: new Date()\r\n        }).then(() =>{\r\n            dispatch({ type:'CREATE_PROJECT',project})\r\n        }).catch((err) =>{\r\n            dispatch({type:'CREATE_PROJECT_ERR',err})\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n            <Switch>\n                <Route exact path=\"/\" component={Dashboard} />\n                <Route path=\"/projects/:id\" component={ProjectDetails} />\n                <Route path=\"/signin\" component={SignIn}/>\n                <Route path=\"/signup\" component={SignUp}/>\n                <Route path=\"/createproject\" component={CreateProject}/>\n            </Switch> \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState= {\r\n    authError:null\r\n}\r\nconst authReducer = (state = initState,action) =>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('sign out success');\r\n            return state\r\n        \r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('SIGNUP Success');\r\n            return {\r\n                ...state,\r\n                authError: null          \r\n            }\r\n\r\n        case 'SIGNUP_ERROR':\r\n            console.log('SIGNUP Failed');\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n","const initState= {\r\n    project:[\r\n        {id:'1',title:'Testing Project 1',content:'Lore ipsum Testing project 1'},\r\n        {id:'2',title:'Testing Project 2',content:'Lore ipsum Testing project 2'},\r\n        {id:'3',title:'Testing Project 3',content:'Lore ipsum Testing project 3'}]\r\n}\r\nconst projectReducer = (state = initState,action) =>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT': \r\n            console.log('created project',action.project);\r\n            return state\r\n        case 'CREATE_PROJECT_ERR':\r\n            console.log('created project error', action.err);\r\n            return state\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default projectReducer\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers} from 'redux';\r\nimport { firestoreReducer} from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyBxIS5ptSSLGGkfdDesGJg5H88abCWXQfk\",\r\n    authDomain: \"project-plan-7495b.firebaseapp.com\",\r\n    databaseURL: \"https://project-plan-7495b.firebaseio.com\",\r\n    projectId: \"project-plan-7495b\",\r\n    storageBucket: \"project-plan-7495b.appspot.com\",\r\n    messagingSenderId: \"733943571682\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n  //firebase.firestore().settings({timestampsInSnapshots:true})\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './reducer/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore} from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users',attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then( () =>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n\n})\n"],"sourceRoot":""}